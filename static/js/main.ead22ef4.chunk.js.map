{"version":3,"sources":["Contexts/employeesContext.jsx","Components/employee/employee.jsx","App.js","index.js"],"names":["EmployeesContext","React","createContext","EmployeesContextProvider","children","useState","contextEmployees","setContextEmployees","Provider","value","Employee","showBirthday","hideBirthday","radioActive","employee","active","setActive","id","firstName","lastName","className","type","defaultChecked","name","onClick","App","useEffect","fetch","then","data","ok","json","catch","error","console","log","useContext","currentMonth","Date","getMonth","months","monthsFromCurrent","slice","birthdays","setBirthdays","sessionStorage","getItem","JSON","parse","window","setItem","stringify","useCallback","splice","indexOf","map","letter","isEmpty","iterration","length","toLowerCase","find","birthday","month","sort","a","b","dob","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ead22ef4.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nexport const EmployeesContext = React.createContext(null);\r\n\r\nexport default function EmployeesContextProvider({ children }) {\r\n\r\n    const [contextEmployees, setContextEmployees] = useState(false);\r\n\r\n    return (\r\n        <EmployeesContext.Provider value={{\r\n            contextEmployees, setContextEmployees\r\n        }} >\r\n            {children}\r\n        </EmployeesContext.Provider>\r\n    );\r\n}","import './employee.scss';\r\nimport { useState } from 'react';\r\n\r\nexport default function Employee({ showBirthday, hideBirthday, radioActive, employee  }) {\r\n\r\n    const [active, setActive] = useState(radioActive);    \r\n    const { id, firstName, lastName } = employee; \r\n    return (\r\n        <div className=\"employee\">\r\n            <h6 className={`${active ? 'blue' : ''}`}>\r\n                {firstName} {lastName}\r\n            </h6>\r\n            <label>\r\n                <input type=\"radio\" defaultChecked={radioActive ? false : true} name={`${id}radio`} onClick={() => {setActive(false); hideBirthday(employee)}} />\r\n                Not active\r\n            </label>\r\n            <label>\r\n                <input type=\"radio\" defaultChecked={radioActive ? true : false} name={`${id}radio`} onClick={() => {setActive(true); showBirthday(employee)}} />\r\n                Active\r\n            </label>\r\n        </div>\r\n    )\r\n}","import './App.scss';\nimport { useState, useEffect, useContext, useCallback } from 'react';\nimport { EmployeesContext } from './Contexts/employeesContext';\nimport Employee from './Components/employee/employee';\n\nexport default function App() {\n\n    useEffect(() => {\n        fetch('https://yalantis-react-school-api.yalantis.com/api/task0/users')\n            .then((data) => {\n                if (data.ok) return data.json();\n                throw ('Error download');\n            })\n            .then((data) => {\n                setContextEmployees(data);\n            })\n            .catch((error) => console.log(error))\n            ;\n    }, [])\n\n    const { contextEmployees, setContextEmployees } = useContext(EmployeesContext);\n\n    const alphabet = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'];\n\n    const currentMonth = new Date().getMonth();\n    const months = ['January', 'February', 'March', 'April', 'May', 'June', 'Jule', 'August', 'September', 'October', 'November', 'December'];\n    const monthsFromCurrent = [months[currentMonth], ...months.slice(currentMonth + 1), ...months.slice(0, currentMonth)];\n\n    const [birthdays, setBirthdays] = useState([]);\n    useEffect(() => {\n        if (sessionStorage.getItem(\"birthdays\"))\n            setBirthdays(JSON.parse(sessionStorage.getItem(\"birthdays\")));\n    }, [])\n\n    useEffect(() => {\n        window.sessionStorage.setItem(\"birthdays\", JSON.stringify(birthdays));\n    }, [birthdays])\n\n    const showBirthday = useCallback((employee) => {\n        setBirthdays([...birthdays, employee]);\n    }, [birthdays]);\n\n    const hideBirthday = useCallback((employee) => {\n        setBirthdays(birthdays.splice(birthdays.indexOf(employee), 1))\n        setBirthdays([...birthdays]);\n    }, [birthdays]);\n\n    return (\n        <div className=\"App\">\n            <div className='content row'>\n                <div className='employees'>\n                    <h4>\n                        Employees\n                    </h4>\n                    <div className='row'>\n                        {\n                            alphabet.map(letter => {\n                                let isEmpty = true;\n                                let iterration = 1;\n                                return <div className='column'>\n                                    <h5>\n                                        {letter}\n                                    </h5>\n\n                                    {\n                                        contextEmployees && contextEmployees.length ?\n                                            contextEmployees.map(employee => (\n                                                iterration++ ,\n                                                letter === employee.firstName.slice(0, 1).toLowerCase() ?\n                                                    (isEmpty = false, <Employee employee={employee} \n                                                            radioActive={birthdays && birthdays.length \n                                                                ? birthdays.find(birthday => birthday.id === employee.id) \n                                                                : false} \n                                                                hideBirthday={hideBirthday} showBirthday={showBirthday} \n                                                                />)\n                                                    : isEmpty && iterration === contextEmployees.length ?\n                                                        <p>No Employees</p>\n                                                        : ''\n                                            ))\n                                            : <p>Error download</p>\n                                    }\n                                </div>\n                            })\n                        }\n                    </div>\n                </div>\n                <div className='birthday'>\n                    <h4>\n                        Employees birthday\n                    </h4>\n                    {\n                        birthdays && birthdays.length ?\n                            monthsFromCurrent.map(month => {\n                                let isEmpty = true;\n                                let iterration = 0;\n                                return <div className='month'>\n                                    <h6>\n                                        {month}\n                                    </h6>\n\n                                    {\n                                        birthdays.sort(function (a, b) {\n                                            if (a.lastName < b.lastName) {\n                                                return -1;\n                                            }\n                                            return 0;\n                                        })\n                                            .map(employee => (\n                                                iterration++ ,\n                                                month === months[employee.dob.slice(5, 7) - 1] ? (\n                                                    isEmpty = false,\n                                                    <li>{employee.firstName} {employee.lastName} - {employee.dob.slice(8, 10)} {months[employee.dob.slice(5, 7) - 1]}, {employee.dob.slice(0, 4)} year</li>\n                                                )\n                                                    : isEmpty && iterration === birthdays.length ?\n                                                        <p>No Employees</p>\n                                                        : ''\n                                            ))\n                                    }\n                                </div>\n                            }) : 'Employees List is empty'\n                    }\n                </div>\n            </div>\n        </div>\n    );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport EmployeesContextProvider from './Contexts/employeesContext';\n\nReactDOM.render(\n\t<EmployeesContextProvider>\n\t\t<App />\n\t</EmployeesContextProvider>,\n\tdocument.getElementById('root')\n);"],"sourceRoot":""}